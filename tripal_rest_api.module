<?php
// $Id$

require_once drupal_get_path('module', 'tripal_rest_api').'/api/tripal_rest_api.api.php';

/**
 * Implementation of hook_permission().
 */
function tripal_rest_api_permission() {
    return array(
        'access tripal_rest_api chado' => array(
            'title' => t('View chado content from API'),
            'description' => t('Allow users to view Chado table content from the API.'),
        ),
        'access tripal_rest_api elasticsearch' => array(
            'title' => t('Index with elasticsearch from API'),
            'description' => t('Allow users to index with elasticsearch the chado content from the API.'),
        ),
        'access tripal_rest_api job' => array(
            'title' => t('View jobs from API'),
            'description' => t('Allow users to view jobs from the API.'),
        ),
        'create tripal_rest_api job' => array(
            'title' => t('Create new jobs from API'),
            'description' => t('Allow users to create jobs from the API.'),
        ),
        'create tripal_rest_api entity' => array(
            'title' => t('Create new entities from API'),
            'description' => t('Allow users to create entities from the API.'),
        )
    );
}

/**
 * Gets a job object by id.
 *
 * @param int $id
 * @return object
 */
function tripal_rest_api_job_retrieve($id) {
    $job = db_query('SELECT j.* FROM {tripal_jobs} j WHERE j.job_id=:job_id', array(':job_id' => $id))
        ->fetchObject();

    $job->arguments = unserialize($job->arguments);
    $job->raw_arguments = $job->arguments;
    $arg_hook = $job->modulename . "_job_describe_args";
    if (is_callable($arg_hook)) {
        $new_args = call_user_func_array($arg_hook, array($job->callback, $job->arguments));
        if (is_array($new_args) and count($new_args)) {
            $job->arguments = $new_args;
        }
        else {
            $job->arguments = $job->arguments;
        }
    }

    return $job;
}

/**
 * Creates a new job
 *
 * @param object job
 * @return void
 */
function tripal_rest_api_job_create($job) {
    return tripal_add_job($job->name, $job->modulename, $job->callback, $job->arguments, $job->uid);
}

/**
 * Creates a new import job
 *
 * @param object job
 * @return void
 */
function tripal_rest_api_job_create_import($job) {

    module_load_include('inc', 'tripal_chado', 'includes/TripalImporter/'.$job->importer);
    module_load_include('inc', 'tripal_analysis_blast', 'includes/TripalImporter/'.$job->importer);
    module_load_include('inc', 'tripal_analysis_interpro', 'includes/TripalImporter/'.$job->importer);
    module_load_include('inc', 'tripal_analysis_go', 'includes/TripalImporter/'.$job->importer);

    $importerRC = new ReflectionClass($job->importer);
    $importer = $importerRC->newInstanceArgs();

    $importer->create($job->arguments, array('file_local' => $job->file));

    return $importer->submitJob();
}

/**
 * Get some Chado content
 *
 * @param string $table
 * @return object
 */
function tripal_rest_api_chado_list($table) {

    if (substr($table, 0, 7) != 'tripal_')
        $table = 'chado.'.$table;

    $content = db_query('SELECT * FROM {'.$table.'}')
        ->fetchAll();

    return $content;
}

/**
 * Get list of taxonomic ranks from Chado content
 *
 * @param string $table
 * @return object
 */
function tripal_rest_api_chado_taxonomic_ranks() {
    $content = db_query("SELECT * FROM {chado.cvterm} where name in ('subspecies', 'varietas', 'subvariety', 'forma', 'subforma')")
        ->fetchAll();

    return $content;
}

/**
 * Implementation of hook_services_resources().
 */
function tripal_rest_api_services_resources() {
    return array(
     'chado' => array(
         'actions' => array(
             'list' => array(
                'help' => t('List content from a Chado table.'),
                'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                'callback' => '_tripal_rest_api_chado_list',
                'access callback' => 'user_access',
                'access arguments' => array('access tripal_rest_api chado'),
                'access arguments append' => FALSE,
                'args' => array(
                     array(
                         'name' => 'data',
                         'type' => 'stdClass',
                         'description' => 'The chado table to list',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                 ),
             ),
             'taxonomic_ranks' => array(
                'help' => t('Get the list of taxonomic ranks from a Chado table.'),
                'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                'callback' => '_tripal_rest_api_chado_taxonomic_ranks',
                'access callback' => 'user_access',
                'access arguments' => array('access tripal_rest_api chado'),
                'access arguments append' => FALSE,
                'args' => array(
                 ),
             )
         ),
     ),
     'elasticsearch' => array(
         'actions' => array(
             'index' => array(
                'help' => t('Index Chado content with elasticsearch module.'),
                'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                'callback' => '_tripal_rest_api_elasticsearch_index',
                'access callback' => 'user_access',
                'access arguments' => array('access tripal_rest_api elasticsearch'),
                'access arguments append' => FALSE,
                'args' => array(
                     array(
                         'name' => 'data',
                         'type' => 'stdClass',
                         'description' => 'The settings for indexing',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                 ),
             )
         ),
     ),
     'entity' => array(
         'actions' => array(
             'create' => array(
                'help' => t('Create a new entity.'),
                'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                'callback' => '_tripal_rest_api_entity_create',
                'access callback' => 'user_access',
                'access arguments' => array('create tripal_rest_api entity'),
                'access arguments append' => FALSE,
                'args' => array(
                     array(
                         'name' => 'data',
                         'type' => 'stdClass',
                         'description' => 'The settings for creating the entity',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                 ),
             )
         ),
     ),
     'job' => array(
         'operations' => array(
             'retrieve' => array(
                 'help' => 'Retrieves a job',
                 'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                 'callback' => '_tripal_rest_api_job_retrieve',
                 'access callback' => 'user_access',
                 'access arguments' => array('access tripal_rest_api job'),
                 'access arguments append' => FALSE,
                 'args' => array(
                     array(
                         'name' => 'id',
                         'type' => 'int',
                         'description' => 'The id of the job to get',
                         'source' => array('path' => '0'),
                         'optional' => FALSE,
                     ),
                 ),
             ),
             'create' => array(
                 'help' => 'Creates a job',
                 'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                 'callback' => '_tripal_rest_api_job_create',
                 'access callback' => 'user_access',
                 'access arguments' => array('create tripal_rest_api job'),
                 'access arguments append' => FALSE,
                 'args' => array(
                     array(
                         'name' => 'data',
                         'type' => 'stdClass',
                         'description' => 'The job object',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                 ),
             ),
             'index' => array(
               'help' => 'Retrieves a listing of jobs',
               'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
               'callback' => '_tripal_rest_api_job_index',
               'access callback' => 'user_access',
               'access arguments' => array('access tripal_rest_api job'),
               'access arguments append' => FALSE,
               'args' => array(),
             ),
         ),
         'actions' => array(
             'run' => array(
                 'help' => 'Run all jobs in queue',
                 'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                 'callback' => '_tripal_rest_api_job_run',
                 'access callback' => 'user_access',
                 'access arguments' => array('access tripal_rest_api job'),
                 'access arguments append' => FALSE,
                 'args' => array(),
             ),
             'is_running' => array(
                 'help' => 'Check if there is a job running',
                 'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                 'callback' => '_tripal_rest_api_job_is_running',
                 'access callback' => 'user_access',
                 'access arguments' => array('access tripal_rest_api job'),
                 'access arguments append' => FALSE,
                 'args' => array(),
             ),
             'logs' => array(
                 'help' => 'Get job output',
                 'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                 'callback' => '_tripal_rest_api_job_logs',
                 'access callback' => 'user_access',
                 'access arguments' => array('access tripal_rest_api job'),
                 'access arguments append' => FALSE,
                 'args' => array(
                     array(
                         'name' => 'stdout',
                         'type' => 'str',
                         'description' => 'Path to stdout file',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                     array(
                         'name' => 'stderr',
                         'type' => 'str',
                         'description' => 'Path to stderr file',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                 ),
             ),
             'create_import' => array(
                 'help' => 'Creates an import job',
                 'file' => array('type' => 'inc', 'module' => 'tripal_rest_api', 'name' => 'tripal_rest_api'),
                 'callback' => '_tripal_rest_api_job_create_import',
                 'access callback' => 'user_access',
                 'access arguments' => array('create tripal_rest_api job'),
                 'access arguments append' => FALSE,
                 'args' => array(
                     array(
                         'name' => 'data',
                         'type' => 'stdClass',
                         'description' => 'The job object',
                         'source' => 'data',
                         'optional' => FALSE,
                     ),
                 ),
             ),
         ),
     ),
    );
}

/**
 * Implements hook_ctools_plugin_api().
 */
function tripal_rest_api_ctools_plugin_api($owner, $api) {
    if ($owner == 'services' && $api == 'services') {
        return array(
            'version' => 3,
            'file' => 'tripal_rest_api.services.inc',
            'path' => drupal_get_path('module', 'tripal_rest_api'),
        );
    }
}
